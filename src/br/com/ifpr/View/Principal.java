/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifpr.View;

import br.com.ifpr.DAO.MovimentacaoDAO;
import br.com.ifpr.DAO.PatrimonioDAO;
import br.com.ifpr.DTO.MovimentacaoDTO;
import br.com.ifpr.DTO.PatrimonioDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dougr
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */    
    private void Listar_Patrimonio(){
        try {
            PatrimonioDAO pDAO = new PatrimonioDAO();
            DefaultTableModel model = (DefaultTableModel) jTPatrimonio.getModel();
            model.setNumRows(0);
            ArrayList<PatrimonioDTO> lista = pDAO.Listar_PatrimonioDAO();
            for(int i=0; i<lista.size();i++){
                model.addRow(new Object[]{
                lista.get(i).getId_patrimonio(),
                lista.get(i).getDescricao_patrimonio(),
                lista.get(i).getValor_patrimonio(),
                lista.get(i).getData_entrada_patrimonio(),
                lista.get(i).getLocal_atual(),
                });
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "ListarPatrimonio_PrincipalView: " + erro);
        }
    }
    
    private void Excluir_Patrimonio(PatrimonioDTO p){
        try {                       
            //LivroDTO lDTO = new LivroDTO();
            //lDTO.setId_livro(Id_livro);
            PatrimonioDAO cDAO = new PatrimonioDAO();
            cDAO.Excluir_PatrimonioDAO(p);
            
            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null,"ExcluirCursoVIew" + erro);
        }        
    }
    
    public Principal() {
        initComponents();
        Listar_Patrimonio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPatrimonio = new javax.swing.JTable();
        jBTNovo = new javax.swing.JButton();
        jBTAlterar = new javax.swing.JButton();
        jBTExcluir = new javax.swing.JButton();
        jBTAtualizar = new javax.swing.JButton();
        jBTHistorico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Sistema de controle de patrimônio");

        jTPatrimonio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Descrição", "Valor", "Data entrada", "Local Atual"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTPatrimonio);

        jBTNovo.setText("Novo");
        jBTNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNovoActionPerformed(evt);
            }
        });

        jBTAlterar.setText("Alterar");
        jBTAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTAlterarActionPerformed(evt);
            }
        });

        jBTExcluir.setText("Excluir");
        jBTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTExcluirActionPerformed(evt);
            }
        });

        jBTAtualizar.setText("Atualizar");
        jBTAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTAtualizarActionPerformed(evt);
            }
        });

        jBTHistorico.setText("Histórico");
        jBTHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTHistoricoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBTNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBTAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBTExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBTAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBTHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBTNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNovoActionPerformed
        new Novo().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTNovoActionPerformed

    private void jBTAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTAtualizarActionPerformed
        Listar_Patrimonio();
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTAtualizarActionPerformed

    private void jBTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTExcluirActionPerformed
        if(jTPatrimonio.getSelectedRowCount()== 0 ){
            JOptionPane.showMessageDialog(this,"Selecione um objeto"); 
        }
        if(jTPatrimonio.getSelectedRowCount() > 0){
            
            int opcao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir?", "Aviso",JOptionPane.YES_NO_OPTION);
            if(opcao == JOptionPane.YES_OPTION){
                    PatrimonioDAO pDAO = new PatrimonioDAO();
                    PatrimonioDTO p = new PatrimonioDTO();
                    ArrayList<PatrimonioDTO> listaPatrimonio= pDAO.Listar_PatrimonioDAO();
                    p = listaPatrimonio.get(jTPatrimonio.getSelectedRow());
                    Excluir_Patrimonio(p);
                
                    //EstadoDAO.excluir(estado);
                    //listar;
            }else if(opcao == JOptionPane.NO_OPTION){
                return;
            }
        }  
        Listar_Patrimonio();
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTExcluirActionPerformed

    private void jBTHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTHistoricoActionPerformed
        if(jTPatrimonio.getSelectedRowCount()== 0){
            new Historico().setVisible(true);
        } 
        if(jTPatrimonio.getSelectedRowCount()== 1){
            MovimentacaoDTO mDTO = new MovimentacaoDTO();
            MovimentacaoDAO mDAO = new MovimentacaoDAO();
            int id_patrimonio;
            ArrayList<MovimentacaoDTO> Alista = mDAO.Listar_MovimentacoesDAO();
            mDTO = Alista.get(jTPatrimonio.getSelectedRow()+1);
            id_patrimonio = mDTO.getId_patrimonio();
            ArrayList<MovimentacaoDTO> lista = mDAO.Listar_MovimentacaoDAO(id_patrimonio);
            
            new Historico(mDTO).setVisible(true);
        }

        
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTHistoricoActionPerformed

    private void jBTAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTAlterarActionPerformed
        if(jTPatrimonio.getSelectedRowCount()== 0 ){
            JOptionPane.showMessageDialog(this,"Selecione um objeto"); 
        }
        if(jTPatrimonio.getSelectedRowCount() > 0){
            PatrimonioDTO p = new PatrimonioDTO();
            PatrimonioDAO pDAO = new PatrimonioDAO();
            ArrayList<PatrimonioDTO> lista = pDAO.Listar_PatrimonioDAO();
            p = lista.get(jTPatrimonio.getSelectedRow());
            new Alterar_local(p).setVisible(true); 
           
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTAlterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTAlterar;
    private javax.swing.JButton jBTAtualizar;
    private javax.swing.JButton jBTExcluir;
    private javax.swing.JButton jBTHistorico;
    private javax.swing.JButton jBTNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTPatrimonio;
    // End of variables declaration//GEN-END:variables
}
