/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifpr.View;

import br.com.ifpr.DAO.MovimentacaoDAO;
import br.com.ifpr.DAO.PatrimonioDAO;
import br.com.ifpr.DTO.MovimentacaoDTO;
import br.com.ifpr.DTO.PatrimonioDTO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dougr
 */
public class Historico extends javax.swing.JFrame {

    /**
     * Creates new form Historico
     */
    private void Listar_Movimentacoes(){
        try {
            MovimentacaoDAO mDAO = new MovimentacaoDAO();
            DefaultTableModel model = (DefaultTableModel) jTMovimentacoes.getModel();
            model.setNumRows(0);
            ArrayList<MovimentacaoDTO> lista = mDAO.Listar_MovimentacoesDAO();
            for(int i=0; i<lista.size();i++){
                model.addRow(new Object[]{
                lista.get(i).getId_movimentacao(),
                lista.get(i).getId_patrimonio(),
                lista.get(i).getLocal_anterior(),
                lista.get(i).getLocal_atual(), 
                lista.get(i).getData_movimentacao(),                                
                });
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "ListarPatrimonio_PrincipalView: " + erro);
        }
    }
    
        private void Listar_Movimentacao(MovimentacaoDTO mDTO){
        try {
            MovimentacaoDAO mDAO = new MovimentacaoDAO();
            DefaultTableModel model = (DefaultTableModel) jTMovimentacoes.getModel();
            model.setNumRows(0);
            int id_patrimonio = mDTO.getId_patrimonio();
            ArrayList<MovimentacaoDTO> lista = mDAO.Listar_MovimentacaoDAO(id_patrimonio);
            
            for(int i=0; i<lista.size();i++){
                model.addRow(new Object[]{
                lista.get(i).getId_movimentacao(),
                lista.get(i).getId_patrimonio(),                                   
                lista.get(i).getLocal_anterior(),
                lista.get(i).getLocal_atual(), 
                lista.get(i).getData_movimentacao(),                                
                });
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "ListarPatrimonio_PrincipalView: " + erro);
        }
    }
    
    
    public Historico() {
        initComponents();
        Listar_Movimentacoes();
    }
    public Historico(MovimentacaoDTO m) {
        initComponents();
        Listar_Movimentacao(m);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTMovimentacoes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jBVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTMovimentacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Movimentação", "Patrimônio", "Local Anterior", "Novo Local", "Data Movimentação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTMovimentacoes);

        jLabel1.setText("Histórico de movimentação");

        jBVoltar.setText("Voltar");
        jBVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jBVoltar)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVoltarActionPerformed
        this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jBVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Historico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Historico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Historico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Historico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Historico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTMovimentacoes;
    // End of variables declaration//GEN-END:variables
}
